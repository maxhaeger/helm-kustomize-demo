
{{- if .Values.argocd.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.argocd.appName }}
  namespace: argocd  # ArgoCD Apps geh√∂ren in argocd namespace
  labels:
    environment: {{ .Values.argocd.destination.namespace }}
spec:
  destination:
    namespace: {{ .Values.argocd.destination.namespace }}
    server: https://kubernetes.default.svc
  source:
    path: nginx-demo
    repoURL: {{ .Values.argocd.source.repoURL }}
    targetRevision: {{ .Values.argocd.source.targetRevision }}
    helm:
      valueFiles:
        - values.yaml
      parameters:
        - name: argocd.enabled
          value: "false"  # WICHTIG: Rekursion verhindern!
  project: default
  syncPolicy:
    automated:
      prune: {{ .Values.argocd.syncPolicy.automated.prune }}
      selfHeal: {{ .Values.argocd.syncPolicy.automated.selfHeal }}
    syncOptions:
      - CreateNamespace=true
{{- end }}

---
{{- if not .Values.argocd.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: {{ .Release.Namespace }}
  labels:
    app: nginx
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:1.14.2
          ports:
            - containerPort: {{ .Values.deployment.port }}
          volumeMounts:
            - name: nginx-config
              mountPath: /usr/share/nginx/html
      volumes:
        - name: nginx-config
          configMap:
            name: my-config1
{{- end }}

---
{{- if not .Values.argocd.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: {{ .Release.Namespace }}
  labels:
    app: nginx
spec:
  type: {{ .Values.service.type }}
  selector:
    app: nginx
  ports:
  - port: {{ .Values.service.port }}
    targetPort: {{ .Values.service.port }}
    protocol: TCP
    name: http
{{- end }}

---
{{- if not .Values.argocd.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-config1
  namespace: {{ .Release.Namespace }}
  labels:
    app: nginx
data:
  index.html: |
{{ .Values.configMap.data.index.html | indent 4 }}
{{- end }}

---
{{- if not .Values.argocd.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx
  namespace: {{ .Release.Namespace }}
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-service
            port:
              number: 80
{{- end }}
