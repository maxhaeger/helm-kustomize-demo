apiVersion: batch/v1
kind: Job
metadata:
  name: osm-data-download
  namespace: ynteract
spec:
  ttlSecondsAfterFinished: 300 # Job wird 5 Min nach Completion gelÃ¶scht
  backoffLimit: 3 # Max 3 Retry-Versuche
  template:
    metadata:
      labels:
        app: osm-downloader
    spec:
      restartPolicy: Never
      imagePullSecrets:
        - name: nexus-secret # Anpassen an Ihren ImagePullSecret Namen
      containers:
        - name: osm-assembler
          image: alpine/curl:latest
          command: ["/bin/sh", "-c"]
          args:
            - |
              set -e

              echo "=== OSM Data Download Job ==="
              REPOSITORY="repository/i000041-raw-repository/nominatim"
              BASE_FILENAME="planet-latest.osm.pbf"

              echo "NEXUS_URL: ${NEXUS_URL}"
              echo "NEXUS_USER: ${NEXUS_USER}"
              echo "Testing first file..."

              # Test the first expected file with full debug
              first_url="${NEXUS_URL}/${REPOSITORY}/${BASE_FILENAME}.aa"
              echo "Testing: ${first_url}"

              curl_response=$(curl -k -I -s -u "${NEXUS_USER}:${NEXUS_PASS}" "${first_url}" 2>&1)
              echo "Curl response for .aa file:"
              echo "$curl_response"

              echo "Checking available chunks..."
              suffixes=""
              count=0

              # Find available suffixes (aa, ab, ac, ... az)
              for c2 in a b c d e f g h i j k l m n o p q r s t u v w x y z; do
                suffix="a${c2}"
                url="${NEXUS_URL}/${REPOSITORY}/${BASE_FILENAME}.${suffix}"
                
                if curl -k -sf -u "${NEXUS_USER}:${NEXUS_PASS}" -I "${url}" >/dev/null 2>&1; then
                  suffixes="${suffixes} ${suffix}"
                  count=$((count + 1))
                  echo "Found: ${suffix}"
                else
                  echo "Not found: ${suffix}"
                  break
                fi
              done

              echo "Found $count chunks"
              [ $count -eq 0 ] && exit 1

              echo "Downloading..."
              for suffix in $suffixes; do
                echo "Get ${suffix}..."
                curl -k -u "${NEXUS_USER}:${NEXUS_PASS}" \
                  "${NEXUS_URL}/${REPOSITORY}/${BASE_FILENAME}.${suffix}" \
                  -o "/maps/${BASE_FILENAME}.${suffix}"
                [ $? -ne 0 ] && exit 1
              done

              echo "Assembly..."
              cat /maps/${BASE_FILENAME}.* > /maps/${BASE_FILENAME}

              if [ $? -eq 0 ] && [ -s "/maps/${BASE_FILENAME}" ]; then
                echo "Cleanup..."
                rm /maps/${BASE_FILENAME}.*
                echo "Done. Size: $(du -h /maps/${BASE_FILENAME})"
              else
                echo "Assembly failed"
                exit 1
              fi

          env:
            - name: NEXUS_URL
              value: "https://artifacts.konvoi.svc.intdev.cloud.bwi.intranet-bw.de"
            - name: NEXUS_USER
              valueFrom:
                secretKeyRef:
                  name: nexus-secret
                  key: raw_nexus_user
            - name: NEXUS_PASS
              valueFrom:
                secretKeyRef:
                  name: nexus-secret
                  key: raw_nexus_secret

          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "1"
              memory: "1Gi"

          volumeMounts:
            - name: nominatim-volume
              mountPath: /maps
              subPath: data/maps

      volumes:
        - name: nominatim-volume
          persistentVolumeClaim:
            claimName: geocoding-daten-pvc
